# ... (début du Dockerfile.buildbase et première étape inchangés) ...

# --- Début de la deuxième étape (FROM ghcr.io/linuxserver/baseimage-kasmvnc:ubuntujammy) ---
FROM ghcr.io/linuxserver/baseimage-kasmvnc:ubuntujammy

ARG DEBIAN_FRONTEND=noninteractive
ENV DEBIAN_FRONTEND=${DEBIAN_FRONTEND}

COPY docker/root/ /

ENV CC=/usr/bin/gcc-12
ENV CXX=/usr/bin/g++-12
ENV TORCH_CUDA_ARCH_LIST="8.0 8.6 8.7 8.9 9.0 9.0a"

RUN apt-get update -q && \
    apt-get install -y -q=2 --no-install-recommends \
    curl \
    software-properties-common \
    wget \
    gnupg \
    mc \
    bc \
    nano \
    rsync \
    libgl1-mesa-glx \
    libtcmalloc-minimal4 \
    # libcufft10 ici aussi, même remarque que pour l'étape builder. Si le build échoue à cause de lui, supprimez-le.
    libcufft10 \
    libxft2 \
    xvfb \
    cmake \
    build-essential \
    ffmpeg \
    gcc-12 \
    g++-12 \
    dotnet-sdk-8.0 \
    git && \
    apt purge gcc-11 g++-11 -y && \
# CUDA toolkit installation
    cd /tmp/ && \
    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb && \
    dpkg -i cuda-keyring_1.1-1_all.deb && \
    apt-get update && \
    apt-get -y install --no-install-recommends cuda-toolkit-12-4 && \
# CLEAN
    apt autoremove -y && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

COPY --from=builder /build/*.whl /wheels/

RUN echo "Création des répertoires..." && \
    mkdir -p /opt/miniconda3 /home/abc

RUN echo "Téléchargement de Miniconda..." && \
    cd /tmp && \
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    # Vérifions que le script est téléchargé et a une taille raisonnable
    ls -lh /tmp/Miniconda3-latest-Linux-x86_64.sh && \
    # Rendons le script explicitement exécutable, même si bash script.sh le contourne
    chmod +x /tmp/Miniconda3-latest-Linux-x86_64.sh

RUN echo "Installation de Miniconda (avec trace sh -x)..." && \
    # Exécuter avec sh -x pour un log détaillé de ce que fait le script Miniconda
    sh -x /tmp/Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda3 && \
    echo "Miniconda installé avec succès (ou échec tracé ci-dessus)."

RUN echo "Suppression du script d'installation de Miniconda..." && \
    rm /tmp/Miniconda3-latest-Linux-x86_64.sh

RUN echo "Vérification de l'utilisateur abc et du groupe users (si présent)..." && \
    id abc ; \
    getent group users || echo "Le groupe 'users' n'existe pas, ce qui est normal pour kasmvnc base." ; \
    getent group abc || echo "Le groupe 'abc' n'existe pas."

RUN echo "Attribution des droits sur Miniconda et /home/abc à abc:abc (ou abc:users si le groupe users existe)..." && \
    chown -R abc:abc /opt/miniconda3 && \
    chown -R abc:abc /home/abc && \
    echo "Permissions mises à jour pour abc:abc."

EXPOSE 9000/tcp
EXPOSE 3000/tcp