# .github/workflows/publishImage.yml
name: Publish Docker images

on:
  push:
    tags: 
      - '*.*.*'
    paths: 
      - 'Dockerfile'
      - 'Dockerfile.buildenv' # Nouveau Dockerfile
      - 'docker/**'
      - '*.sh' 
      - 'parameters/**'
      - 'custom-sample.sh'
      - 'functions.sh'
      - '.github/workflows/publishImage.yml' 
      - 'precompiled_wheels/**' 
    paths-ignore:
      - '**.md'
  workflow_dispatch: 
  workflow_run: 
    workflows: ["Build Python Wheels"] 
    types:
      - completed

jobs:
  build_compile_environment:
    name: Build and Push Compilation Environment Image
    runs-on: ubuntu-latest
    # Déclencher ce job uniquement si les fichiers pertinents pour l'environnement de build changent,
    # ou lors d'un déclenchement manuel/tag pour s'assurer qu'il est à jour.
    # Pour l'instant, on le laisse se construire avec les mêmes déclencheurs que l'image principale.
    # Ou tu pourrais le rendre conditionnel, ex: if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
    permissions:
      packages: write 
      contents: read   
    outputs: # Rendre le tag de l'image de build disponible pour d'autres jobs
      image_tag: ${{ steps.meta-buildenv.outputs.tags }}
      image_name: ghcr.io/${{ github.repository_owner }}/stable-diffusion-buildenv # Nom fixe
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for buildenv image
        id: meta-buildenv
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/stable-diffusion-buildenv
          tags: | # Tag simple pour l'image de build, 'latest' est suffisant
            type=raw,value=latest
            type=sha,prefix=,suffix=,format=short # Utile pour le débogage

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push compilation environment image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.buildenv 
          push: true # Toujours pusher cette image de base si elle est construite
          tags: ${{ steps.meta-buildenv.outputs.tags }}
          labels: ${{ steps.meta-buildenv.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  push_final_image_to_registry: # Renommé pour plus de clarté
    name: Build and Push Final Docker image
    runs-on: ubuntu-latest
    needs: build_compile_environment # S'assurer que l'image de build est prête (optionnel si les tags sont bien gérés)
    if: |
      (vars.DOCKERHUB_IMAGE_NAME != '' || vars.GHCR_IMAGE_NAME != '') &&
      (github.event_name != 'workflow_run' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success'))
    permissions:
      packages: write 
      contents: read   
    steps:
      - name: Free Disk Space (optional)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true; android: true; dotnet: true; haskell: true; large-packages: true; swap-storage: true

      - name: Check out the repo
        uses: actions/checkout@v4 # Pour avoir le Dockerfile final et precompiled_wheels/

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request' && vars.DOCKERHUB_IMAGE_NAME != '' && secrets.DOCKER_USERNAME != ''
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request' && vars.GHCR_IMAGE_NAME != ''
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for final Docker image
        id: meta-final
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ vars.DOCKERHUB_IMAGE_NAME }}
            ${{ vars.GHCR_IMAGE_NAME }}
          tags: | 
            type=raw,value=latest,enable={{is_default_branch || github.ref_type == 'tag'}} 
            type=ref,event=branch 
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,prefix=,suffix=,format=short

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx 
        uses: docker/setup-buildx-action@v3

      - name: Build and push final Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile # Le Dockerfile principal pour l'image finale
          push: ${{ github.event_name != 'pull_request' && !env.ACT}}
          tags: ${{ steps.meta-final.outputs.tags }}
          labels: ${{ steps.meta-final.outputs.labels }}
          platforms: linux/amd64
          builder: ${{ steps.buildx.outputs.name }} 
          cache-from: type=gha
          cache-to: type=gha,mode=max